/*!
 ******************************************************************************
 *
 * \file
 *
 * \brief   Header file that captures build configuration for perf suite.
 *
 ******************************************************************************
 */

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
// Copyright (c) 2017-18, Lawrence Livermore National Security, LLC.
//
// Produced at the Lawrence Livermore National Laboratory
//
// LLNL-CODE-738930
//
// All rights reserved.
//
// This file is part of the RAJA Performance Suite.
//
// For more information, please see the file LICENSE in the top-level directory.
//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//


#ifndef RAJAPerf_config_HPP
#define RAJAPerf_config_HPP

#include "RAJA/config.hpp"

#include <string>

#cmakedefine RAJAPERF_ENABLE_RAJA
#cmakedefine RAJAPERF_ENABLE_KOKKOS

namespace rajaperf {

struct configuration {

// Version of RAJA Perf Suite (ex: 0.1.0)
static const std::string perfsuite_version =
"@RAJA_PERFSUITE_VERSION_MAJOR@" + std::string(".") +
"@RAJA_PERFSUITE_VERSION_MINOR@" + std::string(".") +
"@RAJA_PERFSUITE_VERSION_PATCHLEVEL@";

#ifdef RAJAPERF_ENABLE_RAJA
// Version of RAJA used to build (ex: 0.2.4)
static const std::string raja_version = 
std::to_string(RAJA::RAJA_VERSION_MAJOR) + std::string(".") +
std::to_string(RAJA::RAJA_VERSION_MINOR) + std::string(".") +
std::to_string(RAJA::RAJA_VERSION_PATCH_LEVEL);
#endif
#ifdef RAJAPERF_ENABLE_RAJA
static const std::string kokkos_version = "3.0.0" // TODO DZP: get through CMake
#endif
// Systype and machine code was built on (ex: chaos_5_x64_64, rzhasgpu18)
static const std::string systype_build = "@RAJAPERF_BUILD_SYSTYPE@";
static const std::string machine_build = "@RAJAPERF_BUILD_HOST@";
		
// Compiler used to build (ex: gcc-4.9.3)
static const std::string compiler = "@RAJAPERF_COMPILER@";

// Command options used to build (ex: -Ofast -mavx)
static const std::string compiler_options = "@RAJAPERF_COMPILER_OPTIONS@";
		
// Name of user who ran code
std::string user_run;

// Date, time code was run
std::string date_run;

// Systype and machine code ran on (ex: chaos_5_x64_64)
std::string systype_run;
std::string machine_run;
		
};

} // closing brace for rajaperf namespace

#endif  // closing endif for header file include guard
